#include "my_Q.h"


/*------------------------------------------------------------------*/
/*
        Q-learning
*/

Q::Q(){
    
}

double maxQ(std::vector<double> &Qtable){
    double biggest = *std::max_element(Qtable.begin(), Qtable.end());
    return biggest;
}

int randomInt(){
    return (rand() % (4));
}

double randomDouble(){
    return rand() / double(RAND_MAX);
}


std::vector<std::string> Q::split(const std::string& str, const std::string& delim){
    std::vector<std::string> res;
    if("" == str) return res;
    //先将要切割的字符串从string类型转换为char*类型
    char * strs = new char[str.length() + 1];
    strcpy(strs, str.c_str());
    char * d = new char[delim.length() + 1];
    strcpy(d, delim.c_str());
    char *p = strtok(strs, d);
    while(p){
        std::string s = p;  //分割得到的字符串转换为string类型
        res.push_back(s); //存入结果数组
        p = strtok(NULL, d);
    }
    return res;
}

std::string Q::convertDoubleToString(const double val)
{
    std::string s;
    std::strstream ss;
    ss << val;
    ss >> s;
    return s;
}

std::string Q::convertIntToString(const int val)
{
    std::string s;
    std::strstream ss;
    ss << val;
    ss >> s;
    return s;
}

int Q::convertStringToInt(const std::string &s)
{
    int val;
    std::strstream ss;
    ss << s;
    ss >> val;
    return val;
}

double Q::convertStringToDouble(const std::string &s)
{
    double val;
    std::strstream ss;
    ss << s;
    ss >> val;
    return val;
}


void Q::NewAgent(int actionSpace) {
    myAgent.Alpha = 0.2;
    myAgent.Gamma = 0.8;
    myAgent.Eposilon = 0.7;
    myAgent.ActionSpace = actionSpace;
}

void Q::setKey(double key){
    myAgent.mykey = key;
}

double Q::getKey(){
    return myAgent.mykey;
}
int Q::ChooseAction(std::vector<double> state) {


    if (randomDouble() < myAgent.Eposilon){
        return randomInt();
    } else{
        std::vector<double> actions = getActionByState(state);
//        std::vector<double>::iterator biggest = std::max_element(std::begin(actions),std::end(actions));
        int maxActionIndex = (int)(std::max_element(actions.begin(),
                                                    actions.end()) -
                                                            (actions.begin()));

        return maxActionIndex;
    }
}

std::vector<double> Q::getActionByState(std::vector<double>state){
    if (myAgent.Qtable.count(state) == 0) {
        myAgent.Qtable[state].resize(4,0);
        return myAgent.Qtable[state];
    }
    return myAgent.Qtable[state];
}

void Q::UpdataQ(std::vector<double>& state,int action,double reward,std::vector<double> &newstate){
    std::vector<double> currentQ = getActionByState(state);
    std::vector<double> NextStatQVal = getActionByState(newstate);
    double maxNextStatQVal = maxQ(NextStatQVal);
    double oldQVal = currentQ[action];
    myAgent.Qtable[state][action] = (1 - myAgent.Alpha) * oldQVal + myAgent.Alpha * (reward + myAgent.Gamma * maxNextStatQVal);
}

/*
    env
*/

void Q::NewPlayer() {
    //myAgent.Qtable = read();
    myPlayer.State.resize(2,0);
    int tempActions [4][2] ={
            {-5, 0},
            {0, -5},
            {5, 0},
            {0, 5},
    };
    myPlayer.Actions.resize(4,std::vector<double>(2, 0));
    for (int i = 0; i < 4; i++) {
        for (int j = 0; j < 2; j++) {
            myPlayer.Actions[i][j] = tempActions[i][j];
        }
    }
}

std::vector<double> Q::getState() {
    std::vector<double> result;
    result.resize(2,0);
    for (int i =0; i < 2 ;i++){
        result[i] = myPlayer.State[i];
    }
    return result;
}

/*---------------------------------------*/



// std::map<std::string, std::string > Bhv_BasicMove::getQtable(){
//     return myMap;
// };

void Q::save() {
    std::ofstream ous("/home/wang/Desktop/file/m.txt");
    std::ofstream ousKey("/home/wang/Desktop/file/key.txt");
    std::ofstream ousVal("/home/wang/Desktop/file/val.txt");
    std::map<std::string,std::string >::iterator iter= myMap.begin();
    for(;iter!=myMap.end();iter++){
        ous<< iter->first << "=" << iter->second << std::endl;
        ousKey << "{" << iter->first << "}," <<std::endl;
        ousVal << "{" << iter->second << "}," <<std::endl;

    }
}

void Q::setQtable( std::map<std::vector<double>,std::vector<double> > tempQ ){
    myAgent.Qtable = tempQ;
}

std::map<std::vector<double>,std::vector<double> > Q::read(){
    std::vector<double> tempKey;
    std::vector<double> tempVal;
    std::map<std::vector<double>,std::vector<double> > tempQ;
    std::ifstream ins("/home/wang/Desktop/file/m.txt");
    while(!ins.eof()){
        std::string temp;
        ins >> temp;
        std::vector<std::string> tempstr = split(temp ,"=");

        std::string key = tempstr[0].c_str();
        std::vector<std::string> tempk = split(key,",");
        std::string value = tempstr[1].c_str();
        std::vector<std::string> tempv = split(value,",");

        tempKey.push_back(convertStringToDouble(tempk[0]));
        tempKey.push_back(convertStringToDouble(tempk[1]));
        
        for (int i = 0; i < 4; i++) {
            tempKey.push_back(convertStringToDouble(tempk[i]));
        }

        tempQ[tempKey].resize(4,0);
        tempQ[tempKey] = tempVal;

        tempKey.clear();
        tempVal.clear();
    }

    return tempQ;
}

void Q::setQ(){
    std::vector<std::vector<double> > doubleK;
    doubleK.resize(2048, std::vector<double>(2));
   
    double tempKeys [832][2] ={
    {10.1934,-7.1078},
{10.9593,8.94086},
{10.9602,-5.89239},
{10.9764,-5.92239},
{11.037,-6.01116},
{11.037,6.17179},
{11.037,8.92909},
{11.4857,10.4057},
{11.5662,11.4447},
{11.7663,7.89887},
{11.8984,10.1897},
{11.9569,-11.9052},
{11.9647,8.39406},
{12.0993,9.75473},
{12.168,11.6052},
{12.1977,-7.84055},
{12.1977,-8.77431},
{12.1977,10.1124},
{12.1977,10.8683},
{12.1977,7.16964},
{12.1977,7.84055},
{12.1977,8.92085},
{12.6477,-6.18946},
{12.8582,12.6842},
{12.945,-9.71713},
{12.9911,11.6363},
{13.0141,11.306},
{13.2192,-9.88504},
{13.2646,5.67509},
{13.3192,12.6761},
{13.4302,13.43},
{13.4468,-10.1726},
{13.4567,5.52963},
{13.4649,7.46551},
{13.4806,-10.1739},
{13.4806,-10.3267},
{13.4806,-7.73214},
{13.4806,11.4322},
{13.4806,12.2175},
{13.4806,12.9584},
{13.4806,13.1351},
{13.4806,13.2758},
{13.4806,13.4724},
{13.4806,13.4785},
{13.4806,5.48304},
{13.4806,5.69714},
{13.486,11.4341},
{13.4967,13.4494},
{13.5512,13.4346},
{13.625,13.6207},
{13.8199,12.6553},
{13.8773,12.5348},
{14.0819,-10.8347},
{14.0916,13.0483},
{14.1009,-14.0893},
{14.1303,5.74189},
{14.2415,10.9293},
{14.3475,10.6961},
{14.393,5.49177},
{14.3951,10.9491},
{14.4009,-8.6923},
{14.4114,13.4521},
{14.503,-11.7119},
{14.6156,11.8677},
{14.6308,14.476},
{14.6392,12.1319},
{14.7613,5.46808},
{14.8916,14.8199},
{14.8983,-11.5782},
{14.8983,-12.204},
{14.8983,0.519944},
{14.8983,12.4948},
{14.8983,13.9088},
{14.8983,14.0867},
{14.8983,14.5728},
{14.8983,4.10654},
{15.2745,-9.90912},
{15.4185,15.1475},
{15.4265,15.152},
{15.6118,-12.6813},
{15.7963,8.64563},
{15.7969,-13.1598},
{15.8396,15.8299},
{15.8617,-13.1745},
{16.0521,15.8814},
{16.0904,16.0625},
{16.1205,13.7141},
{16.1449,-13.6991},
{16.4107,-9.49945},
{16.4542,-11.7285},
{16.4652,-13.1497},
{16.4652,-13.9633},
{16.4652,-14.2593},
{16.4652,-16.4627},
{16.4652,13.1497},
{16.4652,13.9633},
{16.4652,14.7988},
{16.4652,16.1054},
{16.4652,16.375},
{16.4652,16.4251},
{16.4652,16.4552},
{16.6777,0.747843},
{16.6876,0.747232},
{17.1261,-14.674},
{17.1262,0.747757},
{17.131,13.6907},
{17.366,17.317},
{17.4554,17.2059},
{17.4916,17.4064},
{17.5165,-17.1086},
{17.6317,-17.45},
{17.7441,14.0218},
{17.8636,-17.8155},
{18.1969,-14.1416},
{18.1969,-15.9153},
{18.1969,-16.492},
{18.1969,-16.6237},
{18.1969,-17.4018},
{18.1969,-18.1941},
{18.1969,13.7333},
{18.1969,15.7589},
{18.1969,16.3552},
{18.1969,18.0612},
{18.2499,-10.2618},
{18.2586,14.3556},
{18.2728,9.71079},
{18.3705,-18.368},
{18.4375,16.5928},
{18.5661,13.7163},
{18.608,-18.0173},
{18.609,-18.0306},
{18.6242,-17.9951},
{18.7355,16.7988},
{18.9285,-16.7366},
{19.2349,13.7003},
{19.3975,17.2851},
{19.7047,-19.6818},
{19.9906,-17.896},
{20.0001,-10.9769},
{20.1106,-10.3577},
{20.1106,-20.1106},
{20.1106,10.3577},
{20.1106,13.97},
{20.1106,19.8631},
{20.1679,14.1326},
{20.4556,-20.0139},
{20.4922,18.2232},
{20.7607,20.0977},
{20.907,-18.8694},
{20.9216,-10.3208},
{21.5193,19.1691},
{21.7227,-21.7193},
{22.1215,21.86},
{22.1219,11.273},
{22.1444,-3.51775},
{22.1559,-3.63527},
{22.2257,-10.7752},
{22.2257,-19.248},
{22.2257,-20.1433},
{22.2257,-22.2122},
{22.2257,-3.09322},
{22.2257,-3.47687},
{22.2257,14.5814},
{22.2546,-3.44311},
{22.6707,-20.6117},
{22.6723,-10.7193},
{22.7658,-10.4043},
{23.2382,23.01},
{23.3585,20.8125},
{23.5611,-23.5339},
{23.5644,15.0756},
{23.6126,23.0628},
{23.8002,-10.518},
{23.8902,-4.08301},
{23.9399,12.1834},
{24.0436,10.4887},
{24.1872,6.09421},
{24.2472,8.44113},
{24.4766,24.0311},
{24.5502,-3.42337},
{24.5632,-24.2608},
{24.5632,-24.4697},
{24.5632,-3.41854},
{24.5632,-3.84253},
{24.5632,-9.99075},
{24.5632,12.651},
{24.5632,15.7889},
{24.5632,21.2724},
{24.5632,21.688},
{24.5632,24.0264},
{24.5632,24.2608},
{24.5632,24.3242},
{24.5632,3.84253},
{24.6524,-24.111},
{24.7505,14.4603},
{24.843,15.5837},
{24.8813,-10.6511},
{24.968,-3.80986},
{24.996,-0.000368122},
{25.0567,21.5263},
{25.0574,21.9406},
{25.0676,-3.78934},
{25.116,17.4509},
{25.598,13.0187},
{25.6964,-24.4076},
{25.7023,-3.48954},
{25.7235,19.0577},
{26.0345,16.0223},
{26.0918,-24.6444},
{26.2352,-9.96791},
{26.2376,-3.10292},
{26.2834,-4.1675},
{26.362,25.8565},
{26.4059,20.5263},
{26.6697,-0.985056},
{26.9806,26.4783},
{27.019,-25.4775},
{27.0785,4.25215},
{27.1069,-3.81505},
{27.1106,26.6788},
{27.1186,-4.47514},
{27.1366,3.30859},
{27.139,-11.0664},
{27.1465,-0.822203},
{27.1465,-25.5094},
{27.1465,-26.4508},
{27.1465,-3.77807},
{27.1465,-4.24665},
{27.1465,-5.1798},
{27.1465,-9.56869},
{27.1465,0.473772},
{27.1465,11.0415},
{27.1465,12.3243},
{27.1465,16.7131},
{27.1465,21.6802},
{27.1465,22.5055},
{27.1465,23.2691},
{27.1465,24.6031},
{27.1465,25.4481},
{27.1465,26.5533},
{27.1465,26.6478},
{27.1465,3.30833},
{27.1465,4.24665},
{27.1465,8.83805},
{27.1465,9.72845},
{27.1585,-2.98057},
{27.1599,1.32635},
{27.1602,0.839509},
{27.2668,-25.0243},
{27.4252,-8.68441},
{27.564,9.32212},
{27.6074,17.054},
{27.6908,-4.61231},
{27.6908,23.588},
{27.6985,-26.8199},
{27.7011,22.5052},
{27.709,11.6421},
{27.7127,22.798},
{27.7299,10.5513},
{27.8565,8.91219},
{27.9419,2.70907},
{28.0318,-25.5165},
{28.1635,-9.36178},
{28.2747,-1.81658},
{28.3134,-11.24},
{28.5967,-9.96661},
{28.6066,-3.85039},
{28.6499,-10.3521},
{29.0533,-5.92117},
{29.06,-11.2644},
{29.0705,2.54732},
{29.2927,-2.90392},
{29.3771,5.20972},
{29.5253,3.18128},
{29.5478,17.6802},
{29.6598,-11.2322},
{29.7578,-27.4026},
{29.7661,-6.57682},
{29.8114,-4.12131},
{29.8178,-27.4039},
{29.8739,29.3113},
{29.8848,-6.95415},
{29.8985,1.04623},
{29.9445,28.9597},
{29.9936,28.6884},
{3.00792,-2.55086},
{3.00792,1.85186},
{3.67388,-3.5936},
{3.67388,3.14913},
{3.83041,-3.1495},
{30.0016,-0.523599},
{30.0016,-1.57016},
{30.0016,-10.2611},
{30.0016,-11.2388},
{30.0016,-12.2027},
{30.0016,-2.61481},
{30.0016,-26.1514},
{30.0016,-3.58393},
{30.0016,-3.857},
{30.0016,-4.01168},
{30.0016,-6.23768},
{30.0016,-7.25803},
{30.0016,-8.26955},
{30.0016,-8.77161},
{30.0016,1.04704},
{30.0016,16.7767},
{30.0016,17.2082},
{30.0016,17.6345},
{30.0016,18.0554},
{30.0016,22.6425},
{30.0016,22.9825},
{30.0016,23.9603},
{30.0016,25.1614},
{30.0016,26.24},
{30.0016,28.6906},
{30.0016,28.9793},
{30.0016,29.346},
{30.0016,29.5925},
{30.0016,3.07961},
{30.0016,3.20127},
{30.0016,5.20972},
{30.0016,6.74888},
{30.0016,8.38035},
{30.0016,8.77161},
{30.0016,8.78513},
{30.0016,9.76755},
{30.0038,-7.61363},
{30.0042,-0.411042},
{30.0053,-2.14541},
{30.0158,-7.97931},
{30.1248,-7.9887},
{30.1458,-6.14171},
{30.173,-8.43531},
{30.1763,-5.70927},
{30.1863,-5.11458},
{30.196,-4.41037},
{30.353,6.94185},
{30.3952,22.9574},
{30.3955,-8.20494},
{30.4207,17.5491},
{30.4334,23.9365},
{30.4794,8.48733},
{30.5343,9.27573},
{30.5418,-4.90591},
{30.6026,29.8784},
{30.6044,22.8205},
{30.6077,27.1884},
{30.6194,26.2349},
{30.7034,7.16251},
{30.7215,8.66597},
{30.9238,18.4582},
{30.9501,7.69288},
{31.0193,-11.5692},
{31.0747,7.59368},
{31.1481,30.1191},
{31.1736,-28.8672},
{31.2203,-3.97441},
{31.224,-14.437},
{31.2813,-11.334},
{31.5846,17.141},
{31.7355,-17.4741},
{31.7566,16.9884},
{31.9188,-11.129},
{32.2856,11.1689},
{32.4231,-11.0993},
{32.4237,-14.3594},
{32.4688,13.0659},
{32.4901,8.94519},
{32.5439,9.84154},
{32.5446,-16.3936},
{32.6944,29.7615},
{32.7123,3.4815},
{32.8621,15.7668},
{32.9234,15.0838},
{32.9602,14.5149},
{33.0209,-1.30161},
{33.0333,30.5961},
{33.1569,-1.7353},
{33.1569,-10.7948},
{33.1569,-16.0345},
{33.1569,-19.9524},
{33.1569,-30.0503},
{33.1569,-30.7425},
{33.1569,-4.0408},
{33.1569,-6.8937},
{33.1569,-8.02137},
{33.1569,0.903663},
{33.1569,10.246},
{33.1569,10.7948},
{33.1569,12.4208},
{33.1569,13.202},
{33.1569,14.535},
{33.1569,15.256},
{33.1569,16.5784},
{33.1569,17.5705},
{33.1569,2.31291},
{33.1569,23.4454},
{33.1569,24.2494},
{33.1569,29.8012},
{33.1569,3.46584},
{33.1569,30.1512},
{33.1569,30.521},
{33.1569,30.7425},
{33.1569,4.77463},
{33.1569,8.02137},
{33.1569,9.13927},
{33.1569,9.47443},
{33.1609,10.3024},
{33.1612,30.7392},
{33.1624,-8.2739},
{33.1705,9.73274},
{33.2097,10.3959},
{33.2228,10.2442},
{33.2452,31.2141},
{33.2621,23.1507},
{33.2672,-29.063},
{33.2759,-29.9724},
{33.4288,-31.1248},
{33.4885,2.88907},
{33.4953,2.0436},
{33.5087,-11.4623},
{33.5298,-7.11967},
{33.6013,-10.9067},
{33.6135,9.00062},
{33.6403,-29.4968},
{33.6556,10.2784},
{33.7014,24.4067},
{33.7287,10.4663},
{33.74,31.282},
{33.8016,10.2902},
{33.8275,-31.5184},
{33.9384,5.56741},
{34.0899,-7.15259},
{34.2132,-31.8748},
{34.2824,10.4207},
{34.4744,-18.6048},
{34.4958,8.62524},
{34.9955,-11.0281},
{35.0204,-7.06269},
{35.5361,8.6372},
{35.8257,-8.29181},
{36.0516,7.22816},
{36.0692,-6.95975},
{36.2164,-28.2803},
{36.2399,8.61978},
{36.2423,11.9797},
{36.357,-25.0459},
{36.4473,-9.35226},
{36.5923,7.58703},
{36.5978,11.9332},
{36.6325,11.4622},
{36.634,6.36134},
{36.644,-10.1005},
{36.644,-11.3236},
{36.644,-11.9301},
{36.644,-17.2033},
{36.644,-21.0181},
{36.644,-24.985},
{36.644,-24.9911},
{36.644,-25.4551},
{36.644,-27.0667},
{36.644,-28.8759},
{36.644,-29.2652},
{36.644,-29.3081},
{36.644,-29.8434},
{36.644,-30.1286},
{36.644,-31.0759},
{36.644,-8.86498},
{36.644,-9.48416},
{36.644,10.7137},
{36.644,11.3236},
{36.644,11.9301},
{36.644,22.0529},
{36.644,22.5385},
{36.644,6.36316},
{36.644,6.992},
{36.644,7.38455},
{36.644,7.61871},
{36.644,8.61628},
{36.644,8.86498},
{36.6442,-8.74089},
{36.705,-8.91021},
{36.7364,-18.1929},
{36.7538,-29.7789},
{36.7717,7.43512},
{36.8059,11.7905},
{36.8127,7.22897},
{36.8424,6.9623},
{36.9857,-24.7272},
{37.0517,-31.8421},
{37.1536,8.82908},
{37.2397,-10.0435},
{37.2618,-10.8314},
{37.3812,-31.3923},
{37.3987,-25.1813},
{37.4075,7.48459},
{37.4619,24.4124},
{37.5309,22.0042},
{37.6984,11.096},
{37.7109,11.532},
{37.7297,-9.28558},
{37.8948,21.5866},
{37.9038,-10.6398},
{38.041,8.83626},
{38.058,-28.5924},
{38.0741,-31.6804},
{38.1308,-27.2249},
{38.1319,10.2356},
{38.1522,-28.5859},
{38.1679,11.4908},
{38.2144,-26.5245},
{38.265,24.3386},
{38.4268,9.82528},
{38.9094,10.9315},
{39.011,11.7584},
{39.0369,-11.9391},
{39.0678,8.85221},
{39.0922,-2.7829},
{39.2571,-12.4975},
{39.3186,2.4672},
{39.3418,-11.1166},
{39.3788,11.8593},
{39.4297,-4.05909},
{39.4368,-2.54718},
{39.4518,-3.26894},
{39.4893,-4.11427},
{39.54,-16.4866},
{39.5915,-23.3892},
{39.6219,-8.19531},
{39.7374,-28.6193},
{39.8717,10.0049},
{39.8876,12.0121},
{39.968,-29.0021},
{4.12063,1.19998},
{4.48729,1.1614},
{4.92073,-4.60489},
{4.95922,-3.96061},
{40.0751,-15.5652},
{40.1615,12.151},
{40.19,-3.93699},
{40.2184,-30.0953},
{40.2737,-25.6526},
{40.3226,-4.31914},
{40.3707,-29.4483},
{40.391,-25.5005},
{40.3942,11.6747},
{40.4373,-23.7964},
{40.4518,-27.6529},
{40.4557,-23.801},
{40.4859,-22.5924},
{40.4979,-0.341296},
{40.4979,-10.4816},
{40.4979,-14.5131},
{40.4979,-20.8579},
{40.4979,-23.8041},
{40.4979,-25.4861},
{40.4979,-27.6195},
{40.4979,-28.7666},
{40.4979,-28.8607},
{40.4979,-29.6183},
{40.4979,-3.52962},
{40.4979,-30.0958},
{40.4979,-9.79732},
{40.4979,10.6304},
{40.4979,10.7947},
{40.4979,10.8926},
{40.4979,11.2997},
{40.4979,11.8404},
{40.4979,12.1323},
{40.4979,20.8579},
{40.4979,21.9162},
{40.4979,4.65707},
{40.4979,8.41998},
{40.5096,-4.07007},
{40.5114,-30.096},
{40.5457,10.3731},
{40.6416,12.2393},
{40.6523,-10.1648},
{40.6691,-21.7501},
{40.8817,-10.0605},
{41.0688,-10.8909},
{41.1158,11.6508},
{41.1299,-14.2431},
{41.158,8.52289},
{41.1618,11.6552},
{41.3357,-9.83708},
{41.5219,21.057},
{41.5379,22.5288},
{41.608,8.53542},
{41.7643,11.6069},
{42.1605,-11.3631},
{42.3684,22.5195},
{42.5401,21.2797},
{42.7269,-16.4977},
{43.4589,-12.0557},
{44.4193,4.3118},
{44.4998,4.40826},
{44.6075,18.1543},
{44.6594,4.22063},
{44.6856,4.14783},
{44.749,17.8381},
{44.7571,-10.0682},
{44.7571,-12.3367},
{44.7571,-18.9152},
{44.7571,10.8277},
{44.7571,12.3367},
{44.7571,14.5715},
{44.7571,15.2495},
{44.7571,18.2043},
{44.7571,22.3785},
{44.7571,3.90084},
{44.7571,4.67839},
{44.7571,6.22898},
{44.7571,8.42375},
{44.7597,6.24898},
{44.8197,14.4734},
{44.8334,14.4422},
{45.057,14.0801},
{45.1687,8.53639},
{45.1918,6.19452},
{45.3303,4.08631},
{45.379,-9.66424},
{45.4129,12.8738},
{45.6823,8.63812},
{45.7233,8.51153},
{45.724,22.6003},
{45.7353,12.3362},
{45.9621,4.29182},
{46.0263,-21.0767},
{46.0349,21.6266},
{46.1632,11.402},
{46.2882,-9.38888},
{46.2925,8.00293},
{46.3089,-13.2866},
{46.3451,8.52802},
{46.494,12.5748},
{46.5286,11.1368},
{46.5485,8.30938},
{47.0191,-9.3592},
{47.3333,-23.0009},
{47.427,12.6833},
{47.466,-7.03471},
{48.0188,12.72},
{48.097,-14.0407},
{48.4237,-4.1125},
{48.58,3.77365},
{48.6364,12.6232},
{48.6531,5.58635},
{48.8026,5.61625},
{48.8353,15.8941},
{48.9317,6.18051},
{48.9949,4.32751},
{48.9953,15.9501},
{49.0607,6.66084},
{49.091,4.08474},
{49.1205,5.88005},
{49.1763,7.22127},
{49.1775,4.54168},
{49.2509,4.48081},
{49.254,3.8463},
{49.256,5.30415},
{49.2637,4.20842},
{49.2674,4.84876},
{49.268,5.8129},
{49.2835,4.60411},
{49.2848,5.42212},
{49.2918,4.46574},
{49.3205,4.92631},
{49.3271,4.85524},
{49.3301,4.53176},
{49.3337,4.42677},
{49.3422,6.44883},
{49.3581,4.71218},
{49.368,3.37236},
{49.3717,4.07827},
{49.378,3.57719},
{49.3839,3.3855},
{49.3928,3.39081},
{49.4157,5.38706},
{49.4276,5.18251},
{49.4371,5.18043},
{49.4443,5.16609},
{49.4507,4.3246},
{49.451,3.43458},
{49.4588,8.16964},
{49.4595,4.33006},
{49.4642,-14.8607},
{49.4642,-2.58876},
{49.4642,-25.3467},
{49.4642,11.127},
{49.4642,12.8023},
{49.4642,13.6342},
{49.4642,16.104},
{49.4642,21.6837},
{49.4642,22.4563},
{49.4642,22.7295},
{49.4642,3.45045},
{49.4642,4.31109},
{49.4642,5.17042},
{49.4642,6.02817},
{49.4642,6.88409},
{49.4642,8.58937},
{49.4671,12.7742},
{49.4706,4.02916},
{49.4741,5.17016},
{49.4762,3.42384},
{49.4794,3.41462},
{49.4848,8.52241},
{49.4911,13.6287},
{49.4927,4.32305},
{49.4974,4.35128},
{49.5053,10.1299},
{49.5136,3.51131},
{49.5328,5.19147},
{49.5402,10.6656},
{49.545,5.05303},
{49.5528,5.19406},
{49.5598,3.34164},
{49.5672,13.3961},
{49.5748,5.01617},
{49.5769,21.519},
{49.6173,23.7203},
{49.6242,5.18297},
{49.6481,4.20711},
{49.6544,3.72536},
{49.6576,4.56091},
{49.674,5.19155},
{49.6814,5.2963},
{49.6878,3.55992},
{49.6909,4.35701},
{49.7028,4.47407},
{49.7738,21.444},
{49.7805,22.1798},
{49.8154,5.29187},
{49.8368,4.33483},
{49.883,4.31981},
{49.8997,23.6232},
{49.902,12.7683},
{49.9102,4.19219},
{5.72578,3.23702},
{50.0722,22.0659},
{50.0885,4.24771},
{50.1376,4.24205},
{50.1573,4.24043},
{50.4492,-0.439025},
{50.8337,-14.9021},
{50.9959,-27.3159},
{51.2602,-28.3726},
{51.3915,1.55358},
{52.0291,-15.4189},
{52.5357,0.323149},
{53.9759,16.6708},
{54.1559,16.7308},
{54.6353,2.76451},
{54.6442,2.79356},
{54.6664,-1.45182},
{54.6664,-16.8929},
{54.6664,-17.7976},
{54.6664,-30.5691},
{54.6664,-32.8991},
{54.6664,10.4308},
{54.6664,11.3658},
{54.6664,13.225},
{54.6664,2.86102},
{54.6664,3.81334},
{54.6664,5.7142},
{54.6664,8.55171},
{54.7154,13.2272},
{54.7349,13.2277},
{55.5201,-18.2247},
{55.5928,5.56073},
{55.6957,-17.4003},
{55.8574,-31.9567},
{56.3229,-18.6261},
{56.6594,-17.8836},
{56.989,-33.2611},
{58.7195,4.09806},
{6.25513,6.20949},
{6.30107,1.60268},
{6.56406,5.90043},
{60.4157,-19.6694},
{60.4157,-20.4469},
{60.4157,-20.6634},
{60.4157,-3.16191},
{60.4157,-4.21439},
{60.4157,-5.26558},
{60.4157,-6.31516},
{60.4157,4.21439},
{60.834,-20.8934},
{60.9173,-19.9463},
{61.0197,-20.0028},
{61.2273,-21.1095},
{61.3891,-20.2065},
{61.5877,-20.3161},
{62.8873,4.4382},
{65.2106,4.64858},
{66.7697,-1.16529},
{66.7697,-11.5944},
{66.7697,-12.7403},
{66.7697,-15.0199},
{66.7697,-16.1531},
{66.7697,-18.4042},
{66.7697,-19.5216},
{66.7697,-5.81936},
{66.7697,-8.13718},
{66.7697,-9.29255},
{66.7697,0},
{66.7697,4.65762},
{68.8225,4.84351},
{7.0135,-5.77874},
{7.03152,-5.57477},
{7.3983,-4.55485},
{7.3983,-6.9069},
{70.7522,5.01825},
{73.7919,-2.5753},
{73.7919,-5.14747},
{73.7919,1.28785},
{73.7919,2.5753},
{73.7919,5.14747},
{75.497,5.30186},
{77.0997,5.447},
{8.32414,4.55531},
{81.5527,7.10779},
{9.0363,4.10239},
{9.0363,8.12177},
{9.0363,8.94836},
{9.56469,-6.8686},
{9.59696,-9.43347},
{9.67141,-7.21643},
{9.98665,7.06163},
{9.98665,7.42153},
{90.1297,7.85532},
    };


    for (int i = 0; i < sizeof(tempKeys)/sizeof(double); i++) {
        for (int j = 0; j < 2; j++) {
            doubleK[i][j] = tempKeys[i][j];
        }
    }
    std::vector<std::vector<double> > doubleV;
    doubleV.resize(2048, std::vector<double>(4));




    double tempVals [sizeof(tempKeys)/sizeof(double)][4] ={
      {0,-0.2,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,-0.2,0,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,0,0,-0.2},
{0,0,0,-0.2},
{0,0,-0.2,-0.2},
{0,0,-0.2,0},
{0,0,-0.2,0},
{0,0,-0.2,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,0,-0.2},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,-0.2,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,-0.2,0},
{0,0,-0.2,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,0,0,-0.2},
{0,0,0,-0.2},
{0,0,0,-0.2},
{0,0,0,-0.2},
{-0.2,0,0,-0.36},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,-0.2,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,0,-0.2,0},
{0,-0.2,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,0,-0.2,0},
{0,0,-0.2,0},
{0,-0.2,0,0},
{0,0,0,-0.2},
{0,0,0,-0.2},
{0,0,0,-0.2},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,0,-0.2,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{-0.2,-0.2,0,-0.2},
{-0.2,0,-0.2,0},
{-0.2,0,0,0},
{0,-0.2,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,0,-0.2},
{0,0,0,-0.2},
{0,0,-0.2,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,0,-0.2,0},
{0,0,-0.36,0},
{-0.2,0,0,-0.2},
{-0.36,0,0,0},
{0,-0.2,0,0},
{0,0,-0.2,0},
{0,-0.2,0,0},
{0,0,0,-0.2},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,-0.2,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,-0.2,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{0,0,-0.2,0},
{0,-0.2,0,0},
{0,0,-0.2,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,0,0,-0.2},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,0,0,-0.2},
{0,0,-0.2,0},
{0,0,-0.2,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,0,0,-0.2},
{0,0,0,-0.2},
{0,-0.2,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,0,0,-0.2},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,-0.2,0},
{2,0,0,0},
{-0.2,0,0,0},
{0,0,2,0},
{0,0,-0.2,0},
{0,0,-0.2,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,0,-0.2,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,0,-0.2},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,-0.2,0,0},
{0,-0.2,0,0},
{0,-0.2,0,0},
{0,-0.2,0,0},
{0,0,-0.2,0},
{0,-0.2,0,0},
{-0.2,0,0,-0.2},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,-0.2,0},
{0,0,0,-0.2},
{0,0,0,-0.2},
{0,-0.2,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,0,0,-0.2},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,0,0,-0.2},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,0,-0.2,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,0,0,-0.2},
{0,0,-0.2,0},
{0,-0.2,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,-0.36,0,0},
{0,0,-0.2,0},
{0,0,-0.2,0},
{0,-0.2,0,0},
{0,-0.2,0,0},
{-0.2,0,0,-0.2},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,-0.2,0,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{0,0,-0.2,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,0,-0.2,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,0,0,-0.2},
{0,0,-0.2,0},
{0,-0.2,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,-0.2,0},
{0,-0.36,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,0,0,-0.2},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,-0.2,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{0,0,0,-0.2},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,-0.2,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{0,-0.2,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,0,-0.2},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,0,-0.2},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,0,-0.2,0},
{0,0,-0.2,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,0,0,-0.2},
{-0.2,-0.488,-0.2,0},
{-0.488,-0.5904,-0.36,-0.488},
{-0.36,-0.488,-0.2,-0.488},
{-0.2,0,0,0},
{-0.2,0,0,-0.2},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,0,-0.2,0},
{0,0,0,-0.2},
{0,0,-0.2,0},
{0,0,0,-0.2},
{0,0,0,-0.2},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,0,-0.2,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,-0.2,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{0,-0.2,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,-0.2,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,-0.2,0,-0.2},
{-0.36,-0.2,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,-0.2,0},
{-0.36,-0.2,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{0,-0.2,0,-0.36},
{-0.2,-0.2,-0.2,0},
{-0.2,-0.36,-0.488,0},
{-0.2,-0.2,0,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{0,0,0,-0.2},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,-0.2,-0.2},
{-0.2,-0.2,-0.2,0},
{-0.2,-0.2,-0.2,0},
{-0.2,-0.2,-0.2,0},
{-0.2,-0.2,-0.2,0},
{0,-0.2,0,-0.36},
{-0.36,0,0,-0.2},
{-0.2,0,-0.36,0},
{-0.2,-0.36,0,0},
{-0.2,-0.2,-0.2,0},
{-0.2,-0.2,-0.2,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,0,-0.2,0},
{0,-0.2,0,0},
{0,0,-0.2,0},
{-0.2,-0.2,-0.2,0},
{-0.2,-0.2,-0.2,0},
{-0.2,0,-0.2,-0.2},
{0,-0.36,0,-0.2},
{0,-0.2,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.36,-0.2,-0.36,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{0,-0.2,0,0},
{-0.2,0,0,0},
{0,0,0,-0.2},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,0,0},
{-0.2,0,-0.2,0},
    };








    for (int i = 0; i < sizeof(tempVals)/sizeof(double); i++) {
        for (int j = 0; j < 4; j++) {
            doubleV[i][j] = tempVals[i][j];
        }
    }
    

    for (int i = 0; i < sizeof(tempVals)/sizeof(double); i++) {
        // std::string myMapKey;
        // std::string myMapVal;
        myAgent.Qtable[doubleK[i]].resize(4,0);
        myAgent.Qtable[doubleK[i]] = doubleV[i];


    //     myMapKey = convertDoubleToString(doubleK[i][0]) + "," + convertDoubleToString(doubleK[i][1]);
    //     myMapVal = convertDoubleToString(doubleV[i][0]) + "," +
    //             convertDoubleToString(doubleV[i][1]) + "," +
    //             convertDoubleToString(doubleV[i][2]) + "," +
    //             convertDoubleToString(doubleV[i][3]);

    //    if (myMap.count(myMapKey) > 0 ){
    //        myMap[myMapKey] = myMapVal;
    //    } else {
    //         myMap.insert(make_pair(myMapKey,myMapVal));
    //    }
    }
}